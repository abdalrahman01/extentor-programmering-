1)

a) in.ReadDouble();
b) i < N;
c) Polygon
d) String
----------------------------------------
2) 
a) programmet fortsÃ¤tter inte pga index out of range i "args[0]"
b) *...**..********..***...*
------------------------------------------------------
3)

public static double[][] trasnpose(double[][] matrix){
    int rows = matrix.length; 
    int cols = matrix[0].length;

    double[][] newMatrix = new double[clos][rows];
    for( int i = 0; i < rows; i++) {
        for (int j =0 ; j < cols; j++) {
            newMatrix[j][i] = matrix[i][j];
        }
    }
    return newMatrix;
}
---------------------------------------------------------------
4) 
java.util.Scanner;

public class LongestRun{
    public static void main(String[] args){
        Scanner data = new Scanner(System.in);
        int[] seenInteger = new int[Integer.MAX_VALUE];
        int consecutive = data.nextInt;
        int length = 1;

        while(data.hasNextInt()){
            int nextInt =data.nextInt(); 
            if ( nextInt == consecutive) {
                length ++;
            } 
            else {
                seenInteger[nextInt] = length;
                consecutive = nextInt;
                length = 1;  
            }
        }

        for(int i = 0; i <  seenInteger.length; i++) {
            if (seenInteger[i] > length) {
                length = seenInteger[i]
                consecutive = i;
            }
        }

        System.out.println("Longenst run: " + length + " consecutive "  + consecutive + ",");
    }
}
--------------------------------------------------------------------------------------------------
5)
java.awt.Color;
public class Invert{
    public static void main(String[] args){
        String filename = args[0];
        Picture img = new Picture(filename);

        for (int i = 0 ; i < img.width(); i++){
            for ( int j = 0; j< img.height(); j++) {
                int r = 255 - img.get(i,j).getRed;
                int g = 255 - img.get(i,j).getGreen;
                int b = 255 - img.get(i,j).getBlue;

                img.set(i,j, new Color(r,g,b));
            }
        }

        img.save("inverted"+filename);
    }
}
--------------------------------------------------------------------------------------------------------
6)
a) x, y och delta
b) public Turtle(double x0, double y0, double, delta0)
c) 
public class Turtle{
    private double x;
    private double y;
    private double delta;
    private java.awt.Color color;

    public Turtle(double x0, double y0, double, delta0){
        x = x0;
        y = y0;
        delta = delta0;
        color = new Color(0,0,0);

    }

    public changeColor(COlor c){
        color = c;
        StdDraw.setPenColor(color);
    }

    public void turnLeft(double d){
        delta = delta  +d;
    }
    public void goForward(double step){
        double newX = x + step * Math.cos(Math.toRadians(delta));
        double newy = y+ step * Math.sin(Math.toRadians(delta));
        StdDraw.line(x,y,newX, newY);
        StdDraw.show(500);

    }
}